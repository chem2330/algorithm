from collections import deque


def solution(board):
    INF = 100000000000000
    N = len(board)
    arr = [[[INF] * 4 for _ in range(N)] for _ in range(N)]
    arr[0][0][0] = arr[0][0][1] = arr[0][0][2] = arr[0][0][3] = 0
    stack = deque()
    if board[0][1] == 0:  # 오른쪽
        stack.append([0, 1, 0])
        arr[0][1][0] = 100
    if board[1][0] == 0:
        stack.append([1, 0, 1])
        arr[1][0][1] = 100
    while stack:
        x, y, direc = stack.popleft()
        for i, d_xy in enumerate([[0, 1], [1, 0], [-1, 0], [0, -1]]):
            dx, dy = d_xy
            nx, ny = x + dx, y + dy
            if 0 <= nx < N and 0 <= ny < N and board[nx][ny] == 0:
                if i == direc:
                    if arr[x][y][direc] + 100 < arr[nx][ny][i]:
                        arr[nx][ny][i] = arr[x][y][direc] + 100
                        stack.append([nx, ny, i])

                else:
                    if arr[x][y][direc] + 600 < arr[nx][ny][i]:
                        arr[nx][ny][i] = arr[x][y][direc] + 600
                        stack.append([nx, ny, i])

    answer = min(arr[-1][-1])
    return answer